{{- if .Values.ingress.enabled -}}
{{- $fullName := include "localstack.fullname" . -}}
{{- $svcPort := .Values.service.edgeService.targetPort -}}
{{- $hasAPIv1 := .Capabilities.APIVersions.Has "networking.k8s.io/v1" -}}
{{- $hasAPIv1Beta := .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
{{- if $hasAPIv1 }}
apiVersion: networking.k8s.io/v1
{{- else if $hasAPIv1Beta }}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "localstack.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          {{- if $hasAPIv1 }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- else -}}
          - path: {{ .path }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
          {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
