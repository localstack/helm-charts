apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "localstack.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "localstack.labels" . | nindent 4 }}
  annotations:
    {{- include "localstack.annotations" . | nindent 4 }}
    {{- with .Values.service.annotations }}
    {{- tpl (toYaml .) $ | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  selector:
    matchLabels:
      {{- include "localstack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or .Values.podAnnotations .Values.enableStartupScripts }}
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.enableStartupScripts }}
        checksum/startup: {{ tpl .Values.startupScriptContent . | sha256sum }}
      {{- end }}
      {{- end }}
      labels:
        {{- include "localstack.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "localstack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if $.Values.command }}
          command:
            {{ toYaml .Values.command | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ .Values.service.edgeService.name }}
              containerPort: {{ .Values.service.edgeService.targetPort }}
              protocol: TCP
            {{- range untilStep (.Values.service.externalServicePorts.start|int) (.Values.service.externalServicePorts.end|int) 1 }}
            - name: "ext-svc-{{ . }}"
              containerPort: {{ . }}
              protocol: TCP
            {{- end }}
            {{- if .Values.service.dnsService }}
            - name: dns-svc
              containerPort: 53
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
            httpGet:
              path: /_localstack/health
              port: {{ .Values.service.edgeService.name }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
            httpGet:
              path: /_localstack/health
              port: {{ .Values.service.edgeService.name }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if coalesce (and (.Values.mountDind.enabled) (.Values.mountDind.forceTLS)) .Values.enableStartupScripts .Values.persistence.enabled .Values.volumeMounts }}
          volumeMounts:
            {{- if and (.Values.mountDind.enabled) (.Values.mountDind.forceTLS) }}
              - name: dind-tls
                mountPath: /opt/docker/tls
            {{- end }}
            {{- if .Values.enableStartupScripts }}
              - name: {{ template "localstack.fullname" . }}-init-scripts-config
              {{- if or (hasPrefix "0." .Values.image.tag) (hasPrefix "1." .Values.image.tag) }}
                mountPath: /docker-entrypoint-initaws.d
              {{- else }}
                mountPath: /etc/localstack/init/ready.d
              {{- end }}
            {{- end }}
            {{- if .Values.persistence.enabled }}
              - name: data
              {{- if hasPrefix "0." .Values.image.tag }}
                mountPath: /tmp/localstack
              {{- else }}
                mountPath: /var/lib/localstack
              {{- end }}
              {{- if .Values.persistence.subPath }}
                subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- end }}
          env:
            - name: DEBUG
              value: {{ ternary "1" "0" .Values.debug | quote }}
            {{- if .Values.service.externalServicePorts.start }}
            - name: EXTERNAL_SERVICE_PORTS_START
              value: {{ .Values.service.externalServicePorts.start | quote }}
            {{- end }}
            {{- if .Values.service.externalServicePorts.end }}
            - name: EXTERNAL_SERVICE_PORTS_END
              value: {{ .Values.service.externalServicePorts.end | quote }}
            {{- end }}
            {{- if .Values.kinesisErrorProbability }}
            - name: KINESIS_ERROR_PROBABILITY
              value: {{ .Values.kinesisErrorProbability | quote }}
            {{- end }}
            {{- if .Values.lambdaExecutor }}
            - name: LAMBDA_EXECUTOR
              value: {{ .Values.lambdaExecutor | quote }}
            {{- end }}
            - name: LOCALSTACK_K8S_SERVICE_NAME
              value: {{ include "localstack.fullname" . }}
            - name: LOCALSTACK_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if include "localstack.lambda.labels" . }}
            - name: LAMBDA_K8S_LABELS
              value: {{ include "localstack.lambda.labels" . | quote }}
            {{- end }}
            {{- if .Values.lambda.securityContext }}
            - name: LAMBDA_K8S_SECURITY_CONTEXT
              value: {{ toJson .Values.lambda.securityContext | quote }}
            {{- end }}
            {{- if .Values.lambda.executor }}
            - name: LAMBDA_RUNTIME_EXECUTOR
              value: {{ .Values.lambda.executor | quote }}
            {{- end }}
            {{- if .Values.lambda.image_prefix }}
            - name: LAMBDA_K8S_IMAGE_PREFIX
              value: {{ .Values.lambda.image_prefix | quote }}
            {{- end }}
            {{- if .Values.lambda.environment_timeout }}
            - name: LAMBDA_RUNTIME_ENVIRONMENT_TIMEOUT
              value: {{ .Values.lambda.environment_timeout | quote }}
            {{- end }}
            {{- if .Values.persistence.enabled }}
            {{- if hasPrefix "0." .Values.image.tag }}
            - name: DATA_DIR
              value: /tmp/localstack/data
            {{- else }}
            - name: PERSISTENCE
              value: "1"
            {{- end }}
            {{- end }}
            {{- if .Values.startServices }}
            - name: EAGER_SERVICE_LOADING
              value: "1"
            - name: SERVICES
              value: {{ .Values.startServices | quote }}
            {{- end }}
            - name: OVERRIDE_IN_DOCKER
              value: "1"
            {{- if .Values.mountDind.enabled }}
            {{- if .Values.mountDind.forceTLS }}
            - name: DOCKER_HOST
              value: tcp://localhost:2376
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: DOCKER_CERT_PATH
              value: /opt/docker/tls/client
            {{- else }}
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            {{- end }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          {{- end }}
        {{- if .Values.mountDind.enabled }}
        - name: dind
          image: {{ .Values.mountDind.image | quote }}
          securityContext:
            privileged: true
          env:
            {{- if .Values.mountDind.forceTLS }}
            - name: DOCKER_TLS_CERTDIR
              value: "/opt/docker/tls"
            {{- else }}
            - name: DOCKER_TLS_CERTDIR
              value: ""
            {{- end }}
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
            {{- if .Values.mountDind.forceTLS }}
            - name: dind-tls
              mountPath: /opt/docker/tls
            {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "common.names.fullname" .) }}
      {{- end }}
      {{- if .Values.mountDind.enabled }}
      - name: dind-storage
        emptyDir: {}
      {{- if .Values.mountDind.forceTLS }}
      - name: dind-tls
        emptyDir: {}
      {{- end }}
      {{- end }}
      {{- if .Values.enableStartupScripts }}
      - name: {{ template "localstack.fullname" . }}-init-scripts-config
        configMap:
          name: {{ template "localstack.fullname" . }}-init-scripts-config
          defaultMode: 0755
      {{- end }}
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
