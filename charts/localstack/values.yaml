# Default values for LocalStack
# Declare variables to be passed into your templates

replicaCount: 1

## @param updateStrategy.type deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
##
updateStrategy:
  type: RollingUpdate

image:
  repository: localstack/localstack
  tag: "latest"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## @param extraDeploy Extra objects to deploy (value evaluated as a template)
##
extraDeploy: []

## Add additional annotations to every resource
extraAnnotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

role:
  # Specifies whether a role & rolebinding with pods / * permissions should be created for the service account
  # Necessary for kubernetes lambda executor
  create: true
  # Annotations to add to the role and rolebinding
  annotations: {}
  # The name of the role and rolebinding to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podLabels: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

debug: false

## @param command Allows you to set an arbitrary command on startup (instead of the default entrypoint script)
##
command: []

## @param dnsPolicy Allows you to set the Pod dnsPolicy.
## The default is actually ClusterFirst. Uncomment this to avoid a circular DNS path that will
## cause the LocalStack instance to crash.
## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
# dnsPolicy: "Default"

startServices: ""
# Comma-separated list of AWS CLI service names which are the only ones allowed to be used (other services will then by default be prevented from being loaded).

# kinesisErrorProbability: 0.0


# lambdaExecutor: ""

# This will enable the Docker daemon binding and allow
# Localstack to provide Lambdas and other AWS services
# who got container runtime dependencies
mountDind:
  enabled: false
  forceTLS: true
  image: "docker:20.10-dind"

## All the parameters from the configuatioan can be added using extraEnvVars.
## Ref. https://docs.localstack.cloud/references/configuration/
## extraEnvVars:
##   - name: DEFAULT_REGION
##     value: "us-east-1"
##   - name: SERVICES
##     value: "serverless,sqs,es"
extraEnvVars: []

## envFrom Allows you to set additional environment variables from a ConfigMap or Secret
## - configMapRef:
##     name: configmap-name
envFrom: []

livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

service:
  type: NodePort
  annotations: {}
  ipFamilies: []
  ipFamilyPolicy: ""
  externalTrafficPolicy: ""
  edgeService:
    name: edge
    targetPort: 4566
    nodePort: 31566
  externalServicePorts:
    start: 4510
    end: 4560
    ## @param service.externalServicePorts.nodePortStart specifies the starting node ports the serviceports are mapped to
    ##   has to be in the node port range configured. See https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    # nodePortStart: 31510
  ## @param service.dnsService Enables or disables the exposure of the LocalStack DNS
  ##
  dnsService: false
  ## @param service.clusterIP sets a static clusterIP. This is useful alongside the LocalStack DNS setup
  ##   see https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#configuration-of-stub-domain-and-upstream-nameserver-using-coredns for an example of DNS delegation in Coredns
  ##
  clusterIP: ""

ingress:
  enabled: false
  annotations: {}
  ## @param ingress.ingressClassName Set the name of the class to use
  ##
  ingressClassName: ""
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: false
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 8Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.subPath The name of a volume's sub path to mount for persistence
  ##
  subPath: ""
  ## @param persistence.annotations Annotations to be added to PVC
  ##
  annotations: {}


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# All settings inside the lambda values section are only applicable to the new v2 lambda provider
lambda:
  # The lambda runtime executor.
  # Depending on the value, LocalStack will execute lambdas either in docker containers or in kubernetes pods
  # The value "kubernetes" depends on the service account and pod role being activated
  executor: "docker"
  # Image prefix for the kubernetes lambda images. The images will have to be pushed to that repository.
  # Only applicable when executor is set to "kubernetes"
  # Example: python3.9 runtime -> localstack/lambda-python:3.9
  image_prefix: "localstack/lambda-"
  # Timeout for spawning new lambda execution environments.
  # After that timeout, the environment (in essence pod/docker container) will be killed and restarted
  # Increase if spawning pods / docker containers takes longer in your environment
  environment_timeout: 60
  # Labels which will be assigned to the kubernetes pods spawned by the kubernetes executor.
  # They will be set on all spawned pods.
  # Only applicable when executor is set to "kubernetes"
  labels: {}
  # labels:
  #   label1: value1
  #   label2: value2
  #   label3: value3
  #
  # Security context to be set on the kubernetes pods spawned by the kubernetes executor.
  # It will be set on all spawned pods.
  # Only applicable when executor is set to "kubernetes"
  security_context: {}
  # security_context:
  #   runAsUser: 1000
  #   fsGroup: 1000
  #   label3: value3


nodeSelector: {}

tolerations: []

affinity: {}

# Mount /etc/localstack/init/ready.d to run startup scripts with
# {{ template "localstack.fullname" . }}-init-scripts-config configMap
enableStartupScripts: false

# Add startup scripts content used by {{ template "localstack.fullname" . }}-init-scripts-config configMap
# to run at localstack startup
# startupScriptContent: |
  # awslocal s3 mb s3://testbucket
  # awslocal sqs create-queue --queue-name test-queue
startupScriptContent: ""

# @param volumes Extra volumes to mount
volumes: []
#  - hostPath:
#      path: <HOST_PATH>
#    name: <VOLUME_NAME>

# @param volumeMounts Extra volumes to mount
volumeMounts: []
#  - name: <VOLUME_NAME>
#    mountPath: <CONTAINER_PATH>
#    readOnly: true

## @param priorityClassName Allows you to set the priorityClassName for the pod
## The default is not to set any priorityClassName
# priorityClassName: ""
